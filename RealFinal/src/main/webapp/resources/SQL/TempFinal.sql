/* 사원 */
CREATE TABLE TBL_EMPLOYEE (
	empId NUMBER NOT NULL, /* 사원id */
	fk_teamId NUMBER NOT NULL, /* 팀id */
	fk_positionId NUMBER NOT NULL, /* 직위id */
	fk_jobId NUMBER NOT NULL, /* 직무id */
	empType CHAR(1) NOT NULL, /* 근로형태 */
	companyTel VARCHAR2(10), /* 사내전화 */
	tel VARCHAR2(15), /* 휴대전화 */
	email VARCHAR2(55) NOT NULL, /* 이메일 */
	pwd VARCHAR2(55) NOT NULL, /* 비밀번호 */
	startWorkDay DATE, /* 입사일 */
	birth DATE, /* 생년월일 */
	address NVARCHAR2(100), /* 주소 */
	detailAddress NVARCHAR2(50), /* 상세주소 */
	postCode VARCHAR2(10), /* 우편번호 */
	status CHAR(1) NOT NULL, /* 상태 */
	registerDay DATE DEFAULT sysdate NOT NULL, /* 등록일자 */
	updateDay DATE, /* 업데이트일자 */
	empName NVARCHAR2(10) NOT NULL /* 사원명 */
);

COMMENT ON TABLE TBL_EMPLOYEE IS '사원';

COMMENT ON COLUMN TBL_EMPLOYEE.empId IS '사원id';

COMMENT ON COLUMN TBL_EMPLOYEE.fk_teamId IS '팀id';

COMMENT ON COLUMN TBL_EMPLOYEE.fk_positionId IS '직위id';

COMMENT ON COLUMN TBL_EMPLOYEE.fk_jobId IS '직무id';

COMMENT ON COLUMN TBL_EMPLOYEE.empType IS '근로형태';

COMMENT ON COLUMN TBL_EMPLOYEE.companyTel IS '사내전화';

COMMENT ON COLUMN TBL_EMPLOYEE.tel IS '휴대전화';

COMMENT ON COLUMN TBL_EMPLOYEE.email IS '이메일';

COMMENT ON COLUMN TBL_EMPLOYEE.pwd IS '비밀번호';

COMMENT ON COLUMN TBL_EMPLOYEE.startWorkDay IS '입사일';

COMMENT ON COLUMN TBL_EMPLOYEE.birth IS '생년월일';

COMMENT ON COLUMN TBL_EMPLOYEE.address IS '주소';

COMMENT ON COLUMN TBL_EMPLOYEE.detailAddress IS '상세주소';

COMMENT ON COLUMN TBL_EMPLOYEE.postCode IS '우편번호';

COMMENT ON COLUMN TBL_EMPLOYEE.status IS '상태';

COMMENT ON COLUMN TBL_EMPLOYEE.registerDay IS '등록일자';

COMMENT ON COLUMN TBL_EMPLOYEE.updateDay IS '업데이트일자';

COMMENT ON COLUMN TBL_EMPLOYEE.empName IS '사원명';

CREATE UNIQUE INDEX PK_TBL_EMPLOYEE
	ON TBL_EMPLOYEE (
		empId ASC
	);

ALTER TABLE TBL_EMPLOYEE
	ADD
		CONSTRAINT PK_TBL_EMPLOYEE
		PRIMARY KEY (
			empId
		);

/* 부서 */
CREATE TABLE TBL_DEPARTMENT (
	depId NUMBER NOT NULL, /* 부서id */
	depName NVARCHAR2(20) NOT NULL /* 부서명 */
);

COMMENT ON TABLE TBL_DEPARTMENT IS '부서';

COMMENT ON COLUMN TBL_DEPARTMENT.depId IS '부서id';

COMMENT ON COLUMN TBL_DEPARTMENT.depName IS '부서명';

CREATE UNIQUE INDEX PK_TBL_DEPARTMENT
	ON TBL_DEPARTMENT (
		depId ASC
	);

ALTER TABLE TBL_DEPARTMENT
	ADD
		CONSTRAINT PK_TBL_DEPARTMENT
		PRIMARY KEY (
			depId
		);

/* 팀 */
CREATE TABLE TBL_TEAM (
	teamId NUMBER NOT NULL, /* 팀id */
	fk_depId NUMBER NOT NULL, /* 부서id */
	teamName NVARCHAR2(20) NOT NULL /* 팀명 */
);

COMMENT ON TABLE TBL_TEAM IS '팀';

COMMENT ON COLUMN TBL_TEAM.teamId IS '팀id';

COMMENT ON COLUMN TBL_TEAM.fk_depId IS '부서id';

COMMENT ON COLUMN TBL_TEAM.teamName IS '팀명';

CREATE UNIQUE INDEX PK_TBL_TEAM
	ON TBL_TEAM (
		teamId ASC
	);

ALTER TABLE TBL_TEAM
	ADD
		CONSTRAINT PK_TBL_TEAM
		PRIMARY KEY (
			teamId
		);

/* 직위 */
CREATE TABLE TBL_POSITION (
	positionId NUMBER NOT NULL, /* 직위id */
	positionName NVARCHAR2(20) NOT NULL /* 직위명 */
);

COMMENT ON TABLE TBL_POSITION IS '직위';

COMMENT ON COLUMN TBL_POSITION.positionId IS '직위id';

COMMENT ON COLUMN TBL_POSITION.positionName IS '직위명';

CREATE UNIQUE INDEX PK_TBL_POSITION
	ON TBL_POSITION (
		positionId ASC
	);

ALTER TABLE TBL_POSITION
	ADD
		CONSTRAINT PK_TBL_POSITION
		PRIMARY KEY (
			positionId
		);

/* 직무 */
CREATE TABLE TBL_JOB (
	jobId NUMBER NOT NULL, /* 직무id */
	jobName NVARCHAR2(20) NOT NULL /* 직무명 */
);

COMMENT ON TABLE TBL_JOB IS '직무';

COMMENT ON COLUMN TBL_JOB.jobId IS '직무id';

COMMENT ON COLUMN TBL_JOB.jobName IS '직무명';

CREATE UNIQUE INDEX PK_TBL_JOB
	ON TBL_JOB (
		jobId ASC
	);

ALTER TABLE TBL_JOB
	ADD
		CONSTRAINT PK_TBL_JOB
		PRIMARY KEY (
			jobId
		);

/* 근무내역 */
CREATE TABLE TBL_WORKHISTORY (
	workHistoryId NUMBER NOT NULL, /* 근무내역id */
	fk_empId NUMBER NOT NULL, /* 사원id */
	workType CHAR(1) NOT NULL, /* 근무종류 */
	resisterDayTime DATE DEFAULT sysdate NOT NULL, /* 등록일시 */
	isDelete CHAR(1) DEFAULT 0 NOT NULL /* 삭제여부 */
);

COMMENT ON TABLE TBL_WORKHISTORY IS '근무내역';

COMMENT ON COLUMN TBL_WORKHISTORY.workHistoryId IS '근무내역id';

COMMENT ON COLUMN TBL_WORKHISTORY.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_WORKHISTORY.workType IS '근무종류';

COMMENT ON COLUMN TBL_WORKHISTORY.resisterDayTime IS '등록일시';

COMMENT ON COLUMN TBL_WORKHISTORY.isDelete IS '삭제여부';

CREATE UNIQUE INDEX PK_TBL_WORKHISTORY
	ON TBL_WORKHISTORY (
		workHistoryId ASC
	);

ALTER TABLE TBL_WORKHISTORY
	ADD
		CONSTRAINT PK_TBL_WORKHISTORY
		PRIMARY KEY (
			workHistoryId
		);

/* 연차 */
CREATE TABLE TBL_ANNUAL (
	annualId NUMBER NOT NULL, /* 연차id */
	years NUMBER NOT NULL, /* 년차 */
	annualLeave NUMBER NOT NULL /* 연차일수 */
);

COMMENT ON TABLE TBL_ANNUAL IS '연차';

COMMENT ON COLUMN TBL_ANNUAL.annualId IS '연차id';

COMMENT ON COLUMN TBL_ANNUAL.years IS '년차';

COMMENT ON COLUMN TBL_ANNUAL.annualLeave IS '연차일수';

CREATE UNIQUE INDEX PK_TBL_ANNUAL
	ON TBL_ANNUAL (
		annualId ASC
	);

ALTER TABLE TBL_ANNUAL
	ADD
		CONSTRAINT PK_TBL_ANNUAL
		PRIMARY KEY (
			annualId
		);

/* 휴가종류 */
CREATE TABLE TBL_DAYOFFTYPE (
	dayOffTypeId DATE NOT NULL, /* 휴가종류id */
	dayOffTypeName NVARCHAR2(20) NOT NULL /* 휴가종류명 */
);

COMMENT ON TABLE TBL_DAYOFFTYPE IS '휴가종류';

COMMENT ON COLUMN TBL_DAYOFFTYPE.dayOffTypeId IS '휴가종류id';

COMMENT ON COLUMN TBL_DAYOFFTYPE.dayOffTypeName IS '휴가종류명';

CREATE UNIQUE INDEX PK_TBL_DAYOFFTYPE
	ON TBL_DAYOFFTYPE (
		dayOffTypeId ASC
	);

ALTER TABLE TBL_DAYOFFTYPE
	ADD
		CONSTRAINT PK_TBL_DAYOFFTYPE
		PRIMARY KEY (
			dayOffTypeId
		);

/* 급여 상세 */
CREATE TABLE TBL_SALARYDETAIL (
	salaryDetailId NUMBER NOT NULL, /* 급여 상세id */
	fk_salaryId NUMBER NOT NULL, /* 급여id */
	fk_empId NUMBER NOT NULL, /* 대상사원id */
	basePay INT NOT NULL, /* 기본급 */
	overTimePay INT NOT NULL, /* 연장근로수당 */
	nightTimePay INT NOT NULL, /* 야간근로수당 */
	holidayPay INT NOT NULL, /* 휴일근로수당 */
	unUsedAnnualPay INT NOT NULL, /* 미사용연차수당 */
	totalPay INT NOT NULL, /* 지급총액 */
	incomeTax INT NOT NULL, /* 소득세 */
	localTax INT NOT NULL, /* 지방소득세 */
	nationalPension INT NOT NULL, /* 국민연금 */
	healthInsurance INT NOT NULL, /* 건강보험 */
	longTermCareInsurance INT NOT NULL, /* 장기요양보험 */
	totalDeduction INT NOT NULL, /* 공제총액 */
	actualPay INT NOT NULL /* 실지급액 */
);

COMMENT ON TABLE TBL_SALARYDETAIL IS '급여 상세';

COMMENT ON COLUMN TBL_SALARYDETAIL.salaryDetailId IS '급여 상세id';

COMMENT ON COLUMN TBL_SALARYDETAIL.fk_salaryId IS '급여id';

COMMENT ON COLUMN TBL_SALARYDETAIL.fk_empId IS '대상사원id';

COMMENT ON COLUMN TBL_SALARYDETAIL.basePay IS '기본급';

COMMENT ON COLUMN TBL_SALARYDETAIL.overTimePay IS '연장근로수당';

COMMENT ON COLUMN TBL_SALARYDETAIL.nightTimePay IS '야간근로수당';

COMMENT ON COLUMN TBL_SALARYDETAIL.holidayPay IS '휴일근로수당';

COMMENT ON COLUMN TBL_SALARYDETAIL.unUsedAnnualPay IS '미사용연차수당';

COMMENT ON COLUMN TBL_SALARYDETAIL.totalPay IS '지급총액';

COMMENT ON COLUMN TBL_SALARYDETAIL.incomeTax IS '소득세';

COMMENT ON COLUMN TBL_SALARYDETAIL.localTax IS '지방소득세';

COMMENT ON COLUMN TBL_SALARYDETAIL.nationalPension IS '국민연금';

COMMENT ON COLUMN TBL_SALARYDETAIL.healthInsurance IS '건강보험';

COMMENT ON COLUMN TBL_SALARYDETAIL.longTermCareInsurance IS '장기요양보험';

COMMENT ON COLUMN TBL_SALARYDETAIL.totalDeduction IS '공제총액';

COMMENT ON COLUMN TBL_SALARYDETAIL.actualPay IS '실지급액';

CREATE UNIQUE INDEX PK_TBL_SALARYDETAIL
	ON TBL_SALARYDETAIL (
		salaryDetailId ASC
	);

ALTER TABLE TBL_SALARYDETAIL
	ADD
		CONSTRAINT PK_TBL_SALARYDETAIL
		PRIMARY KEY (
			salaryDetailId
		);

/* 전자결재양식 */
CREATE TABLE TBL_FORM (
	formId NUMBER NOT NULL, /* 양식id */
	description NVARCHAR2(100) NOT NULL, /* 설명 */
	preservationYear INT NOT NULL, /* 보존연한 */
	isUse CHAR(1) NOT NULL, /* 사용여부 */
	resgisterDay DATE DEFAULT sysdate NOT NULL, /* 등록일자 */
	formName NVARCHAR2(30) NOT NULL, /* 양식명 */
	updateDay DATE /* 업데이트일자 */
);

COMMENT ON TABLE TBL_FORM IS '전자결재양식';

COMMENT ON COLUMN TBL_FORM.formId IS '양식id';

COMMENT ON COLUMN TBL_FORM.description IS '설명';

COMMENT ON COLUMN TBL_FORM.preservationYear IS '보존연한';

COMMENT ON COLUMN TBL_FORM.isUse IS '사용여부';

COMMENT ON COLUMN TBL_FORM.resgisterDay IS '등록일자';

COMMENT ON COLUMN TBL_FORM.formName IS '양식명';

COMMENT ON COLUMN TBL_FORM.updateDay IS '업데이트일자';

CREATE UNIQUE INDEX PK_TBL_FORM
	ON TBL_FORM (
		formId ASC
	);

ALTER TABLE TBL_FORM
	ADD
		CONSTRAINT PK_TBL_FORM
		PRIMARY KEY (
			formId
		);

/* 전자결재 */
CREATE TABLE TBL_APPROVAL (
	approvalId NUMBER NOT NULL, /* 전자결재id */
	fk_formId NUMBER NOT NULL, /* 양식id */
	fk_empId NUMBER NOT NULL, /* 적용사원id */
	title NVARCHAR2(30) NOT NULL, /* 제목 */
	draftDay DATE DEFAULT sysdate NOT NULL, /* 기안일 */
	completeDay DATE, /* 완료일 */
	isTemporary CHAR(1) NOT NULL, /* 임시저장여부 */
	fk_securityId NUMBER NOT NULL, /* 보안id */
	isDelete CHAR(1) NOT NULL /* 삭제여부 */
);

COMMENT ON TABLE TBL_APPROVAL IS '전자결재';

COMMENT ON COLUMN TBL_APPROVAL.approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_APPROVAL.fk_formId IS '양식id';

COMMENT ON COLUMN TBL_APPROVAL.fk_empId IS '적용사원id';

COMMENT ON COLUMN TBL_APPROVAL.title IS '제목';

COMMENT ON COLUMN TBL_APPROVAL.draftDay IS '기안일';

COMMENT ON COLUMN TBL_APPROVAL.completeDay IS '완료일';

COMMENT ON COLUMN TBL_APPROVAL.isTemporary IS '임시저장여부';

COMMENT ON COLUMN TBL_APPROVAL.fk_securityId IS '보안id';

COMMENT ON COLUMN TBL_APPROVAL.isDelete IS '삭제여부';

CREATE UNIQUE INDEX PK_TBL_APPROVAL
	ON TBL_APPROVAL (
		approvalId ASC
	);

ALTER TABLE TBL_APPROVAL
	ADD
		CONSTRAINT PK_TBL_APPROVAL
		PRIMARY KEY (
			approvalId
		);

/* 휴가신청 */
CREATE TABLE TBL_DAYOFFAPPLICATION (
	dayOffAppId NUMBER NOT NULL, /* 휴가신청id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	dayOffDay DATE NOT NULL, /* 휴가일자 */
	fk_dayOffTypeId DATE NOT NULL, /* 휴가종류id */
	type CHAR(1) NOT NULL, /* 종류 */
	reason CLOB /* 사유 */
);

COMMENT ON TABLE TBL_DAYOFFAPPLICATION IS '휴가신청';

COMMENT ON COLUMN TBL_DAYOFFAPPLICATION.dayOffAppId IS '휴가신청id';

COMMENT ON COLUMN TBL_DAYOFFAPPLICATION.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_DAYOFFAPPLICATION.dayOffDay IS '휴가일자';

COMMENT ON COLUMN TBL_DAYOFFAPPLICATION.fk_dayOffTypeId IS '휴가종류id';

COMMENT ON COLUMN TBL_DAYOFFAPPLICATION.type IS '종류';

COMMENT ON COLUMN TBL_DAYOFFAPPLICATION.reason IS '사유';

CREATE UNIQUE INDEX PK_TBL_DAYOFFAPPLICATION
	ON TBL_DAYOFFAPPLICATION (
		dayOffAppId ASC
	);

ALTER TABLE TBL_DAYOFFAPPLICATION
	ADD
		CONSTRAINT PK_TBL_DAYOFFAPPLICATION
		PRIMARY KEY (
			dayOffAppId
		);

/* 전자결재 첨부파일 */
CREATE TABLE TBL_APPROVALFILE (
	fileId NUMBER NOT NULL, /* 첨부파일id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	fileName NVARCHAR2(255) NOT NULL, /* 파일명 */
	fileSize NUMBER NOT NULL /* 파일크기 */
);

COMMENT ON TABLE TBL_APPROVALFILE IS '전자결재 첨부파일';

COMMENT ON COLUMN TBL_APPROVALFILE.fileId IS '첨부파일id';

COMMENT ON COLUMN TBL_APPROVALFILE.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_APPROVALFILE.fileName IS '파일명';

COMMENT ON COLUMN TBL_APPROVALFILE.fileSize IS '파일크기';

CREATE UNIQUE INDEX PK_TBL_APPROVALFILE
	ON TBL_APPROVALFILE (
		fileId ASC
	);

ALTER TABLE TBL_APPROVALFILE
	ADD
		CONSTRAINT PK_TBL_APPROVALFILE
		PRIMARY KEY (
			fileId
		);

/* 근무체크수정요청 */
CREATE TABLE TBL_MODIFYWORKREQUEST (
	requestId NUMBER NOT NULL, /* 근무체크수정요청id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	fk_workHistoryId NUMBER, /* 근무내역id */
	modifyRequestDateTime DATE, /* 수정요청시간 */
	requestType CHAR(1) NOT NULL, /* 요청종류 */
	detail CLOB, /* 상세 */
	mod_workType CHAR(1) DEFAULT 0 NOT NULL /* 근무종류 */
);

COMMENT ON TABLE TBL_MODIFYWORKREQUEST IS '근무체크수정요청';

COMMENT ON COLUMN TBL_MODIFYWORKREQUEST.requestId IS '근무체크수정요청id';

COMMENT ON COLUMN TBL_MODIFYWORKREQUEST.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_MODIFYWORKREQUEST.fk_workHistoryId IS '근무내역id';

COMMENT ON COLUMN TBL_MODIFYWORKREQUEST.modifyRequestDateTime IS '수정요청시간';

COMMENT ON COLUMN TBL_MODIFYWORKREQUEST.requestType IS '요청종류';

COMMENT ON COLUMN TBL_MODIFYWORKREQUEST.detail IS '상세';

COMMENT ON COLUMN TBL_MODIFYWORKREQUEST.mod_workType IS '근무종류';

CREATE UNIQUE INDEX PK_TBL_MODIFYWORKREQUEST
	ON TBL_MODIFYWORKREQUEST (
		requestId ASC
	);

ALTER TABLE TBL_MODIFYWORKREQUEST
	ADD
		CONSTRAINT PK_TBL_MODIFYWORKREQUEST
		PRIMARY KEY (
			requestId
		);

/* 전자결재 절차 */
CREATE TABLE TBL_APPROVALPROCEDURE (
	procedureId NUMBER NOT NULL, /* 절차id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	procedureType CHAR(1) NOT NULL, /* 절차종류 */
	fk_empId NUMBER NOT NULL, /* 사원id */
	status CHAR(1) NOT NULL, /* 현황 */
	sequence NUMBER NOT NULL, /* 순서 */
	isReadReturn CHAR(1) NOT NULL, /* 반려열람여부 */
	registerDay DATE DEFAULT sysdate NOT NULL /* 등록일시 */
);

COMMENT ON TABLE TBL_APPROVALPROCEDURE IS '전자결재 절차';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.procedureId IS '절차id';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.procedureType IS '절차종류';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.status IS '현황';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.sequence IS '순서';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.isReadReturn IS '반려열람여부';

COMMENT ON COLUMN TBL_APPROVALPROCEDURE.registerDay IS '등록일시';

CREATE UNIQUE INDEX PK_TBL_APPROVALPROCEDURE
	ON TBL_APPROVALPROCEDURE (
		procedureId ASC
	);

ALTER TABLE TBL_APPROVALPROCEDURE
	ADD
		CONSTRAINT PK_TBL_APPROVALPROCEDURE
		PRIMARY KEY (
			procedureId
		);

/* 근무신청 */
CREATE TABLE TBL_WORKAPPLICATION (
	workAppId NUMBER NOT NULL, /* 근무신청id */
	approvalId NUMBER NOT NULL, /* 전자결재id */
	fk_workType CHAR(1) NOT NULL, /* 근무내용종류 */
	workDay DATE NOT NULL, /* 근무일 */
	overTimeStart DATE, /* 연장근무시작시간 */
	overTimeEnd DATE, /* 연장근무종료시간 */
	reason CLOB /* 사유 */
);

COMMENT ON TABLE TBL_WORKAPPLICATION IS '근무신청';

COMMENT ON COLUMN TBL_WORKAPPLICATION.workAppId IS '근무신청id';

COMMENT ON COLUMN TBL_WORKAPPLICATION.approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_WORKAPPLICATION.fk_workType IS '근무내용종류';

COMMENT ON COLUMN TBL_WORKAPPLICATION.workDay IS '근무일';

COMMENT ON COLUMN TBL_WORKAPPLICATION.overTimeStart IS '연장근무시작시간';

COMMENT ON COLUMN TBL_WORKAPPLICATION.overTimeEnd IS '연장근무종료시간';

COMMENT ON COLUMN TBL_WORKAPPLICATION.reason IS '사유';

CREATE UNIQUE INDEX PK_TBL_WORKAPPLICATION
	ON TBL_WORKAPPLICATION (
		workAppId ASC
	);

ALTER TABLE TBL_WORKAPPLICATION
	ADD
		CONSTRAINT PK_TBL_WORKAPPLICATION
		PRIMARY KEY (
			workAppId
		);

/* 관리자 */
CREATE TABLE TBL_ADMIN (
	adminId NUMBER NOT NULL, /* 관리자id */
	adminType CHAR(1) NOT NULL, /* 기능종류 */
	fk_empId NUMBER NOT NULL, /* 관리사원id */
	isReadAllDocument CHAR(1) NOT NULL, /* 전체문서열람허용여부 */
	isDelete CHAR(1) DEFAULT 0 NOT NULL /* 삭제여부 */
);

COMMENT ON TABLE TBL_ADMIN IS '관리자';

COMMENT ON COLUMN TBL_ADMIN.adminId IS '관리자id';

COMMENT ON COLUMN TBL_ADMIN.adminType IS '기능종류';

COMMENT ON COLUMN TBL_ADMIN.fk_empId IS '관리사원id';

COMMENT ON COLUMN TBL_ADMIN.isReadAllDocument IS '전체문서열람허용여부';

COMMENT ON COLUMN TBL_ADMIN.isDelete IS '삭제여부';

CREATE UNIQUE INDEX PK_TBL_ADMIN
	ON TBL_ADMIN (
		adminId ASC
	);

ALTER TABLE TBL_ADMIN
	ADD
		CONSTRAINT PK_TBL_ADMIN
		PRIMARY KEY (
			adminId
		);

/* 메일 */
CREATE TABLE TBL_MAIL (
	mailId NUMBER NOT NULL, /* 메일id */
	subject NVARCHAR2(100) NOT NULL, /* 제목 */
	mailContent CLOB NOT NULL, /* 내용 */
	sendDay DATE DEFAULT NULL, /* 발신일시 */
	orgMailId NUMBER DEFAULT 0 NOT NULL /* 원메일id */
);

COMMENT ON TABLE TBL_MAIL IS '메일';

COMMENT ON COLUMN TBL_MAIL.mailId IS '메일id';

COMMENT ON COLUMN TBL_MAIL.subject IS '제목';

COMMENT ON COLUMN TBL_MAIL.mailContent IS '내용';

COMMENT ON COLUMN TBL_MAIL.sendDay IS '발신일시';

COMMENT ON COLUMN TBL_MAIL.orgMailId IS '원메일id';

CREATE UNIQUE INDEX PK_TBL_MAIL
	ON TBL_MAIL (
		mailId ASC
	);

ALTER TABLE TBL_MAIL
	ADD
		CONSTRAINT PK_TBL_MAIL
		PRIMARY KEY (
			mailId
		);

/* 메일첨부파일 */
CREATE TABLE TBL_MAILFILE (
	fileId NUMBER NOT NULL, /* 파일id */
	fk_mailId NUMBER NOT NULL, /* 메일id */
	fileName NVARCHAR2(255) NOT NULL, /* 파일명 */
	fileSize NUMBER NOT NULL, /* 파일크기 */
	orgFileName NVARCHAR2(255) NOT NULL /* 진짜 파일명 */
);

COMMENT ON TABLE TBL_MAILFILE IS '메일첨부파일';

COMMENT ON COLUMN TBL_MAILFILE.fileId IS '파일id';

COMMENT ON COLUMN TBL_MAILFILE.fk_mailId IS '메일id';

COMMENT ON COLUMN TBL_MAILFILE.fileName IS '파일명';

COMMENT ON COLUMN TBL_MAILFILE.fileSize IS '파일크기';

COMMENT ON COLUMN TBL_MAILFILE.orgFileName IS '진짜 파일명';

CREATE UNIQUE INDEX PK_TBL_MAILFILE
	ON TBL_MAILFILE (
		fileId ASC
	);

ALTER TABLE TBL_MAILFILE
	ADD
		CONSTRAINT PK_TBL_MAILFILE
		PRIMARY KEY (
			fileId
		);

/* 개인편지함종류 */
CREATE TABLE TBL_PERSONALMAILBOXTYPE (
	personalMailBoxTypeId NUMBER NOT NULL, /* 개인편지함종류id */
	personalMailBoxTypeName NVARCHAR2(20) NOT NULL, /* 개인편지함명 */
	fk_empId NUMBER NOT NULL /* 사원id */
);

COMMENT ON TABLE TBL_PERSONALMAILBOXTYPE IS '개인편지함종류';

COMMENT ON COLUMN TBL_PERSONALMAILBOXTYPE.personalMailBoxTypeId IS '개인편지함종류id';

COMMENT ON COLUMN TBL_PERSONALMAILBOXTYPE.personalMailBoxTypeName IS '개인편지함명';

COMMENT ON COLUMN TBL_PERSONALMAILBOXTYPE.fk_empId IS '사원id';

CREATE UNIQUE INDEX PK_TBL_PERSONALMAILBOXTYPE
	ON TBL_PERSONALMAILBOXTYPE (
		personalMailBoxTypeId ASC
	);

ALTER TABLE TBL_PERSONALMAILBOXTYPE
	ADD
		CONSTRAINT PK_TBL_PERSONALMAILBOXTYPE
		PRIMARY KEY (
			personalMailBoxTypeId
		);

/* 메일메모 */
CREATE TABLE TBL_MAILMEMO (
	memoId NUMBER NOT NULL, /* 메모id */
	fk_mailId NUMBER NOT NULL, /* 메일id */
	fk_empId NUMBER NOT NULL, /* 사원id */
	content NVARCHAR2(200) NOT NULL, /* 메모내용 */
	mailType CHAR(1) NOT NULL /* 메일함타입 */
);

COMMENT ON TABLE TBL_MAILMEMO IS '메일메모';

COMMENT ON COLUMN TBL_MAILMEMO.memoId IS '메모id';

COMMENT ON COLUMN TBL_MAILMEMO.fk_mailId IS '메일id';

COMMENT ON COLUMN TBL_MAILMEMO.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_MAILMEMO.content IS '메모내용';

COMMENT ON COLUMN TBL_MAILMEMO.mailType IS '메일함타입';

CREATE UNIQUE INDEX PK_TBL_MAILMEMO
	ON TBL_MAILMEMO (
		memoId ASC
	);

ALTER TABLE TBL_MAILMEMO
	ADD
		CONSTRAINT PK_TBL_MAILMEMO
		PRIMARY KEY (
			memoId
		);

/* 참조메일 */
CREATE TABLE TBL_REFERENCEMAIL (
	referenceMailId NUMBER NOT NULL, /* 참조메일id */
	fk_mailId NUMBER NOT NULL, /* 메일id */
	fk_empId NUMBER NOT NULL, /* 수신사원id */
	isHiddenRefence CHAR(1) DEFAULT 0 NOT NULL, /* 숨은참조여부 */
	isDelete CHAR(1) DEFAULT 0 NOT NULL, /* 삭제여부 */
	isImportant CHAR(1) DEFAULT 0 NOT NULL /* 중요여부 */
);

COMMENT ON TABLE TBL_REFERENCEMAIL IS '참조메일';

COMMENT ON COLUMN TBL_REFERENCEMAIL.referenceMailId IS '참조메일id';

COMMENT ON COLUMN TBL_REFERENCEMAIL.fk_mailId IS '메일id';

COMMENT ON COLUMN TBL_REFERENCEMAIL.fk_empId IS '수신사원id';

COMMENT ON COLUMN TBL_REFERENCEMAIL.isHiddenRefence IS '숨은참조여부';

COMMENT ON COLUMN TBL_REFERENCEMAIL.isDelete IS '삭제여부';

COMMENT ON COLUMN TBL_REFERENCEMAIL.isImportant IS '중요여부';

CREATE UNIQUE INDEX PK_TBL_REFERENCEMAIL
	ON TBL_REFERENCEMAIL (
		referenceMailId ASC
	);

ALTER TABLE TBL_REFERENCEMAIL
	ADD
		CONSTRAINT PK_TBL_REFERENCEMAIL
		PRIMARY KEY (
			referenceMailId
		);

/* 수신메일 */
CREATE TABLE TBL_INCOMEMAIL (
	incomeMailId NUMBER NOT NULL, /* 수신메일id */
	fk_mailId NUMBER NOT NULL, /* 메일id */
	fk_empId NUMBER NOT NULL, /* 수신사원id */
	isDelete CHAR(1) DEFAULT 0 NOT NULL, /* 삭제여부 */
	isImportant CHAR(1) DEFAULT 0 NOT NULL, /* 중요여부 */
	isRead CHAR(1) DEFAULT 0 NOT NULL /* 읽음여부 */
);

COMMENT ON TABLE TBL_INCOMEMAIL IS '수신메일';

COMMENT ON COLUMN TBL_INCOMEMAIL.incomeMailId IS '수신메일id';

COMMENT ON COLUMN TBL_INCOMEMAIL.fk_mailId IS '메일id';

COMMENT ON COLUMN TBL_INCOMEMAIL.fk_empId IS '수신사원id';

COMMENT ON COLUMN TBL_INCOMEMAIL.isDelete IS '삭제여부';

COMMENT ON COLUMN TBL_INCOMEMAIL.isImportant IS '중요여부';

COMMENT ON COLUMN TBL_INCOMEMAIL.isRead IS '읽음여부';

CREATE UNIQUE INDEX PK_TBL_INCOMEMAIL
	ON TBL_INCOMEMAIL (
		incomeMailId ASC
	);

ALTER TABLE TBL_INCOMEMAIL
	ADD
		CONSTRAINT PK_TBL_INCOMEMAIL
		PRIMARY KEY (
			incomeMailId
		);

/* 개인편지함분류 */
CREATE TABLE TBL_PERSONALMAILCLASS (
	personalMailClassId NUMBER NOT NULL, /* 개인편지함분류id */
	fk_mailId NUMBER NOT NULL, /* 메일id */
	fk_empId NUMBER NOT NULL, /* 사원id */
	fk_personalMailBoxTypeName NUMBER NOT NULL, /* 개인편지함종류id */
	fromMailBox CHAR(1) NOT NULL, /* 메일함타입 */
	isDelete CHAR(1) DEFAULT 0 NOT NULL, /* 삭제여부 */
	isImportant CHAR(1) DEFAULT 0 NOT NULL /* 중요여부 */
);

COMMENT ON TABLE TBL_PERSONALMAILCLASS IS '개인편지함분류';

COMMENT ON COLUMN TBL_PERSONALMAILCLASS.personalMailClassId IS '개인편지함분류id';

COMMENT ON COLUMN TBL_PERSONALMAILCLASS.fk_mailId IS '메일id';

COMMENT ON COLUMN TBL_PERSONALMAILCLASS.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_PERSONALMAILCLASS.fk_personalMailBoxTypeName IS '개인편지함종류id';

COMMENT ON COLUMN TBL_PERSONALMAILCLASS.fromMailBox IS '메일함타입';

COMMENT ON COLUMN TBL_PERSONALMAILCLASS.isDelete IS '삭제여부';

COMMENT ON COLUMN TBL_PERSONALMAILCLASS.isImportant IS '중요여부';

CREATE UNIQUE INDEX PK_TBL_PERSONALMAILCLASS
	ON TBL_PERSONALMAILCLASS (
		personalMailClassId ASC
	);

ALTER TABLE TBL_PERSONALMAILCLASS
	ADD
		CONSTRAINT PK_TBL_PERSONALMAILCLASS
		PRIMARY KEY (
			personalMailClassId
		);

/* 자원예약 */
CREATE TABLE TBL_RESERVATIONRESOURCE (
	rsvResourceId NUMBER NOT NULL, /* 자원예약id */
	fk_resourceId NUMBER NOT NULL, /* 자원id */
	fk_empId NUMBER NOT NULL, /* 사원id */
	rsvStartDayTime DATE NOT NULL, /* 예약시작일시 */
	rsvEndDayTime DATE NOT NULL, /* 예약종료일시 */
	rsvReason CLOB NOT NULL, /* 사용용도 */
	rsvStatus CHAR(1) NOT NULL, /* 예약상태 */
	approvalStatus CHAR(1), /* 결재상태 */
	approvalDay DATE, /* 결재일자 */
	approvalEmpId NUMBER, /* 승인사원id */
	rejectReason CLOB, /* 반려사유 */
	returnStatus CHAR(1) NOT NULL, /* 반납상태 */
	registerDay DATE DEFAULT sysdate NOT NULL, /* 등록일자 */
	updateDay DATE /* 업데이트일자 */
);

COMMENT ON TABLE TBL_RESERVATIONRESOURCE IS '자원예약';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.rsvResourceId IS '자원예약id';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.fk_resourceId IS '자원id';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.rsvStartDayTime IS '예약시작일시';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.rsvEndDayTime IS '예약종료일시';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.rsvReason IS '사용용도';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.rsvStatus IS '예약상태';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.approvalStatus IS '결재상태';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.approvalDay IS '결재일자';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.approvalEmpId IS '승인사원id';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.rejectReason IS '반려사유';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.returnStatus IS '반납상태';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.registerDay IS '등록일자';

COMMENT ON COLUMN TBL_RESERVATIONRESOURCE.updateDay IS '업데이트일자';

CREATE UNIQUE INDEX PK_TBL_RESERVATIONRESOURCE
	ON TBL_RESERVATIONRESOURCE (
		rsvResourceId ASC
	);

ALTER TABLE TBL_RESERVATIONRESOURCE
	ADD
		CONSTRAINT PK_TBL_RESERVATIONRESOURCE
		PRIMARY KEY (
			rsvResourceId
		);

/* 자원 */
CREATE TABLE TBL_RESOURCE (
	resourceId NUMBER NOT NULL, /* 자원id */
	fk_resourceCategoryId NUMBER NOT NULL, /* 자원카테고리id */
	resourceName NVARCHAR2(20) NOT NULL, /* 자원명 */
	description CLOB, /* 자원설명 */
	imageFile NVARCHAR2(255), /* 이미지파일 */
	isApproval CHAR(1) NOT NULL, /* 승인여부 */
	isReturn CHAR(1) NOT NULL, /* 반납필수여부 */
	isDelete CHAR(1) NOT NULL, /* 삭제여부 */
	registerDay DATE DEFAULT sysdate NOT NULL, /* 등록일자 */
	updateDay DATE /* 업데이트일자 */
);

COMMENT ON TABLE TBL_RESOURCE IS '자원';

COMMENT ON COLUMN TBL_RESOURCE.resourceId IS '자원id';

COMMENT ON COLUMN TBL_RESOURCE.fk_resourceCategoryId IS '자원카테고리id';

COMMENT ON COLUMN TBL_RESOURCE.resourceName IS '자원명';

COMMENT ON COLUMN TBL_RESOURCE.description IS '자원설명';

COMMENT ON COLUMN TBL_RESOURCE.imageFile IS '이미지파일';

COMMENT ON COLUMN TBL_RESOURCE.isApproval IS '승인여부';

COMMENT ON COLUMN TBL_RESOURCE.isReturn IS '반납필수여부';

COMMENT ON COLUMN TBL_RESOURCE.isDelete IS '삭제여부';

COMMENT ON COLUMN TBL_RESOURCE.registerDay IS '등록일자';

COMMENT ON COLUMN TBL_RESOURCE.updateDay IS '업데이트일자';

CREATE UNIQUE INDEX PK_TBL_RESOURCE
	ON TBL_RESOURCE (
		resourceId ASC
	);

ALTER TABLE TBL_RESOURCE
	ADD
		CONSTRAINT PK_TBL_RESOURCE
		PRIMARY KEY (
			resourceId
		);

/* 자원카테고리 */
CREATE TABLE TBL_RESOURCECATEGORY (
	resourceCategoryId NUMBER NOT NULL, /* 자원카테고리id */
	resourceCategoryName NVARCHAR2(30) NOT NULL, /* 자원카테고리명 */
	description CLOB, /* 자원카테고리설명 */
	imageFile NVARCHAR2(255), /* 이미지파일 */
	resourceType CHAR(1) NOT NULL, /* 자원종류 */
	isDelete CHAR(1) NOT NULL, /* 삭제여부 */
	registerDay DATE DEFAULT sysdate NOT NULL, /* 등록일자 */
	updateDay DATE /* 업데이트일자 */
);

COMMENT ON TABLE TBL_RESOURCECATEGORY IS '자원카테고리';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.resourceCategoryId IS '자원카테고리id';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.resourceCategoryName IS '자원카테고리명';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.description IS '자원카테고리설명';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.imageFile IS '이미지파일';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.resourceType IS '자원종류';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.isDelete IS '삭제여부';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.registerDay IS '등록일자';

COMMENT ON COLUMN TBL_RESOURCECATEGORY.updateDay IS '업데이트일자';

CREATE UNIQUE INDEX PK_TBL_RESOURCECATEGORY
	ON TBL_RESOURCECATEGORY (
		resourceCategoryId ASC
	);

ALTER TABLE TBL_RESOURCECATEGORY
	ADD
		CONSTRAINT PK_TBL_RESOURCECATEGORY
		PRIMARY KEY (
			resourceCategoryId
		);

/* 회람신청 */
CREATE TABLE TBL_CIRCULAR (
	circularId NUMBER NOT NULL, /* 회람id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	content CLOB /* 본문 */
);

COMMENT ON TABLE TBL_CIRCULAR IS '회람신청';

COMMENT ON COLUMN TBL_CIRCULAR.circularId IS '회람id';

COMMENT ON COLUMN TBL_CIRCULAR.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_CIRCULAR.content IS '본문';

CREATE UNIQUE INDEX PK_TBL_CIRCULAR
	ON TBL_CIRCULAR (
		circularId ASC
	);

ALTER TABLE TBL_CIRCULAR
	ADD
		CONSTRAINT PK_TBL_CIRCULAR
		PRIMARY KEY (
			circularId
		);

/* 업무연락신청 */
CREATE TABLE TBL_BUSINESSCONTACT (
	businessContactId NUMBER NOT NULL, /* 업무연락id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	content CLOB /* 본문 */
);

COMMENT ON TABLE TBL_BUSINESSCONTACT IS '업무연락신청';

COMMENT ON COLUMN TBL_BUSINESSCONTACT.businessContactId IS '업무연락id';

COMMENT ON COLUMN TBL_BUSINESSCONTACT.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_BUSINESSCONTACT.content IS '본문';

CREATE UNIQUE INDEX PK_TBL_BUSINESSCONTACT
	ON TBL_BUSINESSCONTACT (
		businessContactId ASC
	);

ALTER TABLE TBL_BUSINESSCONTACT
	ADD
		CONSTRAINT PK_TBL_BUSINESSCONTACT
		PRIMARY KEY (
			businessContactId
		);

/* 품의서신청 */
CREATE TABLE TBL_APPROVALLETTER (
	appLetterId NUMBER NOT NULL, /* 품의서id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	content CLOB NOT NULL /* 본문 */
);

COMMENT ON TABLE TBL_APPROVALLETTER IS '품의서신청';

COMMENT ON COLUMN TBL_APPROVALLETTER.appLetterId IS '품의서id';

COMMENT ON COLUMN TBL_APPROVALLETTER.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_APPROVALLETTER.content IS '본문';

CREATE UNIQUE INDEX PK_TBL_APPROVALLETTER
	ON TBL_APPROVALLETTER (
		appLetterId ASC
	);

ALTER TABLE TBL_APPROVALLETTER
	ADD
		CONSTRAINT PK_TBL_APPROVALLETTER
		PRIMARY KEY (
			appLetterId
		);

/* 재직증명서신청 */
CREATE TABLE TBL_EMPPROOF (
	empProofId NUMBER NOT NULL, /* 재직증명서id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	submit NVARCHAR2(100), /* 제출처 */
	reason NVARCHAR2(200), /* 용도 */
	issueDay DATE DEFAULT sysdate NOT NULL /* 발행일자 */
);

COMMENT ON TABLE TBL_EMPPROOF IS '재직증명서신청';

COMMENT ON COLUMN TBL_EMPPROOF.empProofId IS '재직증명서id';

COMMENT ON COLUMN TBL_EMPPROOF.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_EMPPROOF.submit IS '제출처';

COMMENT ON COLUMN TBL_EMPPROOF.reason IS '용도';

COMMENT ON COLUMN TBL_EMPPROOF.issueDay IS '발행일자';

CREATE UNIQUE INDEX PK_TBL_EMPPROOF
	ON TBL_EMPPROOF (
		empProofId ASC
	);

ALTER TABLE TBL_EMPPROOF
	ADD
		CONSTRAINT PK_TBL_EMPPROOF
		PRIMARY KEY (
			empProofId
		);

/* 전자결재중요 */
CREATE TABLE TBL_IMPORTANTAPPROVAL (
	importantApprovalId NUMBER NOT NULL, /* 전자결재중요id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	fk_empId NUMBER NOT NULL /* 사원id */
);

COMMENT ON TABLE TBL_IMPORTANTAPPROVAL IS '전자결재중요';

COMMENT ON COLUMN TBL_IMPORTANTAPPROVAL.importantApprovalId IS '전자결재중요id';

COMMENT ON COLUMN TBL_IMPORTANTAPPROVAL.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_IMPORTANTAPPROVAL.fk_empId IS '사원id';

CREATE UNIQUE INDEX PK_TBL_IMPORTANTAPPROVAL
	ON TBL_IMPORTANTAPPROVAL (
		importantApprovalId ASC
	);

ALTER TABLE TBL_IMPORTANTAPPROVAL
	ADD
		CONSTRAINT PK_TBL_IMPORTANTAPPROVAL
		PRIMARY KEY (
			importantApprovalId
		);

/* 발신메일 */
CREATE TABLE TBL_SENDMAIL (
	sendMailId NUMBER NOT NULL, /* 발신메일id */
	fk_mailId NUMBER NOT NULL, /* 메일id */
	fk_empId NUMBER NOT NULL, /* 사원id */
	isDelete CHAR(1) DEFAULT 0 NOT NULL, /* 삭제여부 */
	isImportant CHAR(1) DEFAULT 0 NOT NULL, /* 중요여부 */
	isCancel CHAR(1) DEFAULT 0 NOT NULL /* 전송취소여부 */
);

COMMENT ON TABLE TBL_SENDMAIL IS '발신메일';

COMMENT ON COLUMN TBL_SENDMAIL.sendMailId IS '발신메일id';

COMMENT ON COLUMN TBL_SENDMAIL.fk_mailId IS '메일id';

COMMENT ON COLUMN TBL_SENDMAIL.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_SENDMAIL.isDelete IS '삭제여부';

COMMENT ON COLUMN TBL_SENDMAIL.isImportant IS '중요여부';

COMMENT ON COLUMN TBL_SENDMAIL.isCancel IS '전송취소여부';

CREATE UNIQUE INDEX PK_TBL_SENDMAIL
	ON TBL_SENDMAIL (
		sendMailId ASC
	);

ALTER TABLE TBL_SENDMAIL
	ADD
		CONSTRAINT PK_TBL_SENDMAIL
		PRIMARY KEY (
			sendMailId
		);

/* 임시저장메일 */
CREATE TABLE TBL_TEMPMAIL (
	tempMailId NUMBER NOT NULL, /* 임시저장메일id */
	fk_mailId NUMBER NOT NULL, /* 메일id */
	fk_empId NUMBER NOT NULL, /* 사원id */
	isDelete CHAR(1) DEFAULT 0 NOT NULL, /* 삭제여부 */
	isImportant CHAR(1) DEFAULT 0 NOT NULL /* 중요여부 */
);

COMMENT ON TABLE TBL_TEMPMAIL IS '임시저장메일';

COMMENT ON COLUMN TBL_TEMPMAIL.tempMailId IS '임시저장메일id';

COMMENT ON COLUMN TBL_TEMPMAIL.fk_mailId IS '메일id';

COMMENT ON COLUMN TBL_TEMPMAIL.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_TEMPMAIL.isDelete IS '삭제여부';

COMMENT ON COLUMN TBL_TEMPMAIL.isImportant IS '중요여부';

CREATE UNIQUE INDEX PK_TBL_TEMPMAIL
	ON TBL_TEMPMAIL (
		tempMailId ASC
	);

ALTER TABLE TBL_TEMPMAIL
	ADD
		CONSTRAINT PK_TBL_TEMPMAIL
		PRIMARY KEY (
			tempMailId
		);

/* 급여 */
CREATE TABLE TBL_SALARY (
	salaryId NUMBER NOT NULL, /* 급여id */
	fk_empId NUMBER NOT NULL, /* 등록사원id */
	month NUMBER NOT NULL, /* 귀속월 */
	startDay DATE NOT NULL, /* 산정시작일 */
	endDay DATE NOT NULL, /* 산정종료일 */
	payDay DATE NOT NULL, /* 급여지급일 */
	registerDay DATE DEFAULT sysdate NOT NULL, /* 등록일자 */
	isFix CHAR(1) DEFAULT 0 NOT NULL /* 확정여부 */
);

COMMENT ON TABLE TBL_SALARY IS '급여';

COMMENT ON COLUMN TBL_SALARY.salaryId IS '급여id';

COMMENT ON COLUMN TBL_SALARY.fk_empId IS '등록사원id';

COMMENT ON COLUMN TBL_SALARY.month IS '귀속월';

COMMENT ON COLUMN TBL_SALARY.startDay IS '산정시작일';

COMMENT ON COLUMN TBL_SALARY.endDay IS '산정종료일';

COMMENT ON COLUMN TBL_SALARY.payDay IS '급여지급일';

COMMENT ON COLUMN TBL_SALARY.registerDay IS '등록일자';

COMMENT ON COLUMN TBL_SALARY.isFix IS '확정여부';

CREATE UNIQUE INDEX PK_TBL_SALARY
	ON TBL_SALARY (
		salaryId ASC
	);

ALTER TABLE TBL_SALARY
	ADD
		CONSTRAINT PK_TBL_SALARY
		PRIMARY KEY (
			salaryId
		);

/* 보안 */
CREATE TABLE TBL_SECURITY (
	securityId NUMBER NOT NULL, /* 보안id */
	securityLevel CHAR(1) NOT NULL, /* 보안등급 */
	fk_positionId NUMBER NOT NULL /* 직위id */
);

COMMENT ON TABLE TBL_SECURITY IS '보안';

COMMENT ON COLUMN TBL_SECURITY.securityId IS '보안id';

COMMENT ON COLUMN TBL_SECURITY.securityLevel IS '보안등급';

COMMENT ON COLUMN TBL_SECURITY.fk_positionId IS '직위id';

CREATE UNIQUE INDEX PK_TBL_SECURITY
	ON TBL_SECURITY (
		securityId ASC
	);

ALTER TABLE TBL_SECURITY
	ADD
		CONSTRAINT PK_TBL_SECURITY
		PRIMARY KEY (
			securityId
		);

/* 전자결재의견 */
CREATE TABLE TBL_APPROVALOPINION (
	opinionId NUMBER NOT NULL, /* 전자결재의견id */
	fk_approvalId NUMBER NOT NULL, /* 전자결재id */
	fk_empId NUMBER NOT NULL, /* 사원id */
	content NVARCHAR2(500) NOT NULL, /* 의견내용 */
	registerDay DATE DEFAULT sysdate NOT NULL /* 등록일시 */
);

COMMENT ON TABLE TBL_APPROVALOPINION IS '전자결재의견';

COMMENT ON COLUMN TBL_APPROVALOPINION.opinionId IS '전자결재의견id';

COMMENT ON COLUMN TBL_APPROVALOPINION.fk_approvalId IS '전자결재id';

COMMENT ON COLUMN TBL_APPROVALOPINION.fk_empId IS '사원id';

COMMENT ON COLUMN TBL_APPROVALOPINION.content IS '의견내용';

COMMENT ON COLUMN TBL_APPROVALOPINION.registerDay IS '등록일시';

CREATE UNIQUE INDEX PK_TBL_APPROVALOPINION
	ON TBL_APPROVALOPINION (
		opinionId ASC
	);

ALTER TABLE TBL_APPROVALOPINION
	ADD
		CONSTRAINT PK_TBL_APPROVALOPINION
		PRIMARY KEY (
			opinionId
		);

/* 관리자 기록 */
CREATE TABLE TBL_ADMINHISTORY (
	adminHistoryId NUMBER NOT NULL, /* 관리자기록id */
	fk_adminId NUMBER NOT NULL, /* 관리자id */
	registerDay DATE DEFAULT sysdate NOT NULL, /* 등록일자 */
	fk_regEmpId NUMBER NOT NULL, /* 등록사원id */
	deleteDay DATE, /* 삭제일자 */
	fk_delEmpId NUMBER /* 삭제사원id */
);

COMMENT ON TABLE TBL_ADMINHISTORY IS '관리자 기록';

COMMENT ON COLUMN TBL_ADMINHISTORY.adminHistoryId IS '관리자기록id';

COMMENT ON COLUMN TBL_ADMINHISTORY.fk_adminId IS '관리자id';

COMMENT ON COLUMN TBL_ADMINHISTORY.registerDay IS '등록일자';

COMMENT ON COLUMN TBL_ADMINHISTORY.fk_regEmpId IS '등록사원id';

COMMENT ON COLUMN TBL_ADMINHISTORY.deleteDay IS '삭제일자';

COMMENT ON COLUMN TBL_ADMINHISTORY.fk_delEmpId IS '삭제사원id';

CREATE UNIQUE INDEX PK_TBL_ADMINHISTORY
	ON TBL_ADMINHISTORY (
		adminHistoryId ASC
	);

ALTER TABLE TBL_ADMINHISTORY
	ADD
		CONSTRAINT PK_TBL_ADMINHISTORY
		PRIMARY KEY (
			adminHistoryId
		);

ALTER TABLE TBL_EMPLOYEE
	ADD
		CONSTRAINT FK_TBL_TEAM_TO_TBL_EMPLOYEE
		FOREIGN KEY (
			fk_teamId
		)
		REFERENCES TBL_TEAM (
			teamId
		);

ALTER TABLE TBL_EMPLOYEE
	ADD
		CONSTRAINT FK_TBL_POSITION_TO_TBL_EMPLOYEE
		FOREIGN KEY (
			fk_positionId
		)
		REFERENCES TBL_POSITION (
			positionId
		);

ALTER TABLE TBL_EMPLOYEE
	ADD
		CONSTRAINT FK_TBL_JOB_TO_TBL_EMPLOYEE
		FOREIGN KEY (
			fk_jobId
		)
		REFERENCES TBL_JOB (
			jobId
		);

ALTER TABLE TBL_TEAM
	ADD
		CONSTRAINT FK_TBL_DEPARTMENT_TO_TBL_TEAM
		FOREIGN KEY (
			fk_depId
		)
		REFERENCES TBL_DEPARTMENT (
			depId
		);

ALTER TABLE TBL_WORKHISTORY
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_WORKHISTORY
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_SALARYDETAIL
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_SALARYDETAIL
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_SALARYDETAIL
	ADD
		CONSTRAINT FK_TBL_SALARY_TO_TBL_SALARYDETAIL
		FOREIGN KEY (
			fk_salaryId
		)
		REFERENCES TBL_SALARY (
			salaryId
		);

ALTER TABLE TBL_APPROVAL
	ADD
		CONSTRAINT FK_TBL_FORM_TO_TBL_APPROVAL
		FOREIGN KEY (
			fk_formId
		)
		REFERENCES TBL_FORM (
			formId
		);

ALTER TABLE TBL_APPROVAL
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_APPROVAL
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_APPROVAL
	ADD
		CONSTRAINT FK_TBL_SECURITY_TO_TBL_APPROVAL
		FOREIGN KEY (
			fk_securityId
		)
		REFERENCES TBL_SECURITY (
			securityId
		);

ALTER TABLE TBL_DAYOFFAPPLICATION
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_DAYOFFAPPLICATION
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_DAYOFFAPPLICATION
	ADD
		CONSTRAINT FK_TBL_DAYOFFTYPE_TO_TBL_DAYOFFAPPLICATION
		FOREIGN KEY (
			fk_dayOffTypeId
		)
		REFERENCES TBL_DAYOFFTYPE (
			dayOffTypeId
		);

ALTER TABLE TBL_APPROVALFILE
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_APPROVALFILE
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_MODIFYWORKREQUEST
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_MODIFYWORKREQUEST
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_MODIFYWORKREQUEST
	ADD
		CONSTRAINT FK_TBL_WORKHISTORY_TO_TBL_MODIFYWORKREQUEST
		FOREIGN KEY (
			fk_workHistoryId
		)
		REFERENCES TBL_WORKHISTORY (
			workHistoryId
		);

ALTER TABLE TBL_APPROVALPROCEDURE
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_APPROVALPROCEDURE
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_APPROVALPROCEDURE
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_APPROVALPROCEDURE
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_WORKAPPLICATION
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_WORKAPPLICATION
		FOREIGN KEY (
			approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_ADMIN
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_ADMIN
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_MAILFILE
	ADD
		CONSTRAINT FK_TBL_MAIL_TO_TBL_MAILFILE
		FOREIGN KEY (
			fk_mailId
		)
		REFERENCES TBL_MAIL (
			mailId
		);

ALTER TABLE TBL_PERSONALMAILBOXTYPE
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_PERSONALMAILBOXTYPE
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_MAILMEMO
	ADD
		CONSTRAINT FK_TBL_MAIL_TO_TBL_MAILMEMO
		FOREIGN KEY (
			fk_mailId
		)
		REFERENCES TBL_MAIL (
			mailId
		);

ALTER TABLE TBL_MAILMEMO
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_MAILMEMO
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_REFERENCEMAIL
	ADD
		CONSTRAINT FK_TBL_MAIL_TO_TBL_REFERENCEMAIL
		FOREIGN KEY (
			fk_mailId
		)
		REFERENCES TBL_MAIL (
			mailId
		);

ALTER TABLE TBL_REFERENCEMAIL
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_REFERENCEMAIL
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_INCOMEMAIL
	ADD
		CONSTRAINT FK_TBL_MAIL_TO_TBL_INCOMEMAIL
		FOREIGN KEY (
			fk_mailId
		)
		REFERENCES TBL_MAIL (
			mailId
		);

ALTER TABLE TBL_INCOMEMAIL
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_INCOMEMAIL
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_PERSONALMAILCLASS
	ADD
		CONSTRAINT FK_TBL_PERSONALMAILBOXTYPE_TO_TBL_PERSONALMAILCLASS
		FOREIGN KEY (
			fk_personalMailBoxTypeName
		)
		REFERENCES TBL_PERSONALMAILBOXTYPE (
			personalMailBoxTypeId
		);

ALTER TABLE TBL_PERSONALMAILCLASS
	ADD
		CONSTRAINT FK_TBL_MAIL_TO_TBL_PERSONALMAILCLASS
		FOREIGN KEY (
			fk_mailId
		)
		REFERENCES TBL_MAIL (
			mailId
		);

ALTER TABLE TBL_PERSONALMAILCLASS
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_PERSONALMAILCLASS
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_RESERVATIONRESOURCE
	ADD
		CONSTRAINT FK_TBL_RESOURCE_TO_TBL_RESERVATIONRESOURCE
		FOREIGN KEY (
			fk_resourceId
		)
		REFERENCES TBL_RESOURCE (
			resourceId
		);

ALTER TABLE TBL_RESERVATIONRESOURCE
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_RESERVATIONRESOURCE
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_RESOURCE
	ADD
		CONSTRAINT FK_TBL_RESOURCECATEGORY_TO_TBL_RESOURCE
		FOREIGN KEY (
			fk_resourceCategoryId
		)
		REFERENCES TBL_RESOURCECATEGORY (
			resourceCategoryId
		);

ALTER TABLE TBL_CIRCULAR
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_CIRCULAR
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_BUSINESSCONTACT
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_BUSINESSCONTACT
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_APPROVALLETTER
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_APPROVALLETTER
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_EMPPROOF
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_EMPPROOF
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_IMPORTANTAPPROVAL
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_IMPORTANTAPPROVAL
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_IMPORTANTAPPROVAL
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_IMPORTANTAPPROVAL
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_SENDMAIL
	ADD
		CONSTRAINT FK_TBL_MAIL_TO_TBL_SENDMAIL
		FOREIGN KEY (
			fk_mailId
		)
		REFERENCES TBL_MAIL (
			mailId
		);

ALTER TABLE TBL_SENDMAIL
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_SENDMAIL
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_TEMPMAIL
	ADD
		CONSTRAINT FK_TBL_MAIL_TO_TBL_TEMPMAIL
		FOREIGN KEY (
			fk_mailId
		)
		REFERENCES TBL_MAIL (
			mailId
		);

ALTER TABLE TBL_TEMPMAIL
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_TEMPMAIL
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_SECURITY
	ADD
		CONSTRAINT FK_TBL_POSITION_TO_TBL_SECURITY
		FOREIGN KEY (
			fk_positionId
		)
		REFERENCES TBL_POSITION (
			positionId
		);

ALTER TABLE TBL_APPROVALOPINION
	ADD
		CONSTRAINT FK_TBL_APPROVAL_TO_TBL_APPROVALOPINION
		FOREIGN KEY (
			fk_approvalId
		)
		REFERENCES TBL_APPROVAL (
			approvalId
		);

ALTER TABLE TBL_APPROVALOPINION
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_APPROVALOPINION
		FOREIGN KEY (
			fk_empId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_ADMINHISTORY
	ADD
		CONSTRAINT FK_TBL_ADMIN_TO_TBL_ADMINHISTORY
		FOREIGN KEY (
			fk_adminId
		)
		REFERENCES TBL_ADMIN (
			adminId
		);

ALTER TABLE TBL_ADMINHISTORY
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_ADMINHISTORY
		FOREIGN KEY (
			fk_regEmpId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);

ALTER TABLE TBL_ADMINHISTORY
	ADD
		CONSTRAINT FK_TBL_EMPLOYEE_TO_TBL_ADMINHISTORY2
		FOREIGN KEY (
			fk_delEmpId
		)
		REFERENCES TBL_EMPLOYEE (
			empId
		);
        
        
        
        


--------------------------------------------------------
--  DDL for Sequence ADMINHISTORYSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ADMINHISTORYSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence ADMINSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ADMINSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------

--  DDL for Sequence APPROVALFILESEQ
--------------------------------------------------------

   CREATE SEQUENCE  "APPROVALFILESEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence APPROVALLETTERSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "APPROVALLETTERSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence APPROVALOPINIONSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "APPROVALOPINIONSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence APPROVALPROCEDURESEQ
--------------------------------------------------------

   CREATE SEQUENCE  "APPROVALPROCEDURESEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence APPROVALSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "APPROVALSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence BUSINESSCONTACTSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "BUSINESSCONTACTSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence CIRCULARSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "CIRCULARSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence DAYOFFAPPROVALSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "DAYOFFAPPROVALSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------

--  DDL for Sequence DEPSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "DEPSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence EMPLOYEESEQ
--------------------------------------------------------

   CREATE SEQUENCE  "EMPLOYEESEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence EMPPROOFSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "EMPPROOFSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence FORMSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FORMSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence IMPAPPROVALSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IMPAPPROVALSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence INCOMEMAILSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "INCOMEMAILSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence JOBSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "JOBSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence LOGINHISTORYSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LOGINHISTORYSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence MAILFILESEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MAILFILESEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence MAILMEMOSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MAILMEMOSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence MAILSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MAILSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence MODIFYWORKREQUESTSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MODIFYWORKREQUESTSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence PMAILBOXTYPESEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PMAILBOXTYPESEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence PMAILCLASSSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PMAILCLASSSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence REFMAILSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "REFMAILSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence RESOURCECATEGORYSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RESOURCECATEGORYSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence RESOURCESEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RESOURCESEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence RSVRESOURCESEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RSVRESOURCESEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence SALARYDETAILSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SALARYDETAILSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence SALARYSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SALARYSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence SENDMAILSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SENDMAILSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence TEAMSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TEAMSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence TEMPMAILSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TEMPMAILSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------

--  DDL for Sequence WORKHISTORYSEQ
--------------------------------------------------------

   CREATE SEQUENCE  "WORKHISTORYSEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL



        
