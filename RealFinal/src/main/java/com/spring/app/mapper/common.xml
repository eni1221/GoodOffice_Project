<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="common">


	<!-- === 로그인 완료 요청하기 === --> 
	<select id="getLoginMember" resultType="com.spring.app.common.domain.EmployeeVO" parameterType="HashMap"> 
		select empId, empName, SUBSTR(email, 0,INSTR(email, '@')-1) as id, fk_teamId, teamName
         	 , fk_depId, depName, fk_positionId, positionName, fk_jobId, empType, companyTel, tel, email
             , to_char(startWorkDay, 'yyyy-mm-dd') AS startWorkDay
             , to_char(birth, 'yyyy-mm-dd') AS birth, address, detailAddress, postCode, status
             , to_char(registerDay, 'yyyy-mm-dd') AS registerDay
             , to_char(updateDay, 'yyyy-mm-dd') AS updateDay
             , nvl(adminType, '0') as adminType
             , NVL2(adminType, '1', '0') as isAdmin
             , NVL2(isReadAllDocument, 1, 0) as isReadAllDocument
        from tbl_employee E
        join tbl_team T on E.fk_teamId = T.teamId
        join tbl_department D on T.fk_depId = D.depId
        join tbl_position P  on E.fk_positionId = P.positionId
        left join (select adminType, isReadAllDocument, fk_empID from tbl_admin a join tbl_employee e on a.fk_empId = e.empId where email = #{loginId} and a.isDelete = 0 )  A on E.empId = A.fk_empId
        where status = 1 and email = #{loginId}
    </select>
	
 	
 	
</mapper>	